//과제 - 이혜승

/*
for문을 사용하여 0부터 10미만의 정수 중에서 짝수만을 작은 수부터 출력하시오.
ex) 
0
2
4
6
8
*/
console.log('[1번]');

for (var i = 0; i < 10; i++) {
  //0에서 9까지 반복하되,
  if (i % 2 == 0) { //i를 2로 나누었을 때 나머지가 0인 경우 = 짝수
    console.log(i);
  }
}

console.log('\n');

/*
for문을 사용하여 0부터 10미만의 정수 중에서 짝수만을 작은 수부터 문자열로 출력하시오.
ex) 02468
*/
console.log('[2번]');

var answer = ''; // 빈 문자열 answer를 선언해준다.
for (var i = 0; i < 10; i++) { //0 ~ 9까지 반복문을 수행한다.
  if (i % 2 == 0) {  //만약 i를 2로 나눈 나머지가 0이라면
    answer = answer + i;
    /* '+'(plus)연산은 문자열+숫자일 때, 숫자와 문자를 공백 없이 이어 붙여서 문자열로 출력한다.
    (ex. i=0일 때, answer = '' + 0 = '0' -> '0' 출력
         i=2일 때, answer = '0' + '2' -> '02' 출력) */
  }
}
console.log(answer + '\n'); //위에서 for문이 종료된 후 만들어진 문자열을 출력한다.


/*
for문을 사용하여 0부터 10미만의 정수 중에서 홀수만을 큰수부터 출력하시오.
ex)
9
7
5
3
1
*/
console.log('[3번]');

for (var i = 10; i > 0; i--) {
  //i가 10에서 시작, 1까지 감소하며 총 10번 반복한다.
  if (i % 2 !== 0) { //i를 2로 나누었을 때 나머지가 0인 경우 = 짝수
    console.log(i);
  }
}

console.log('\n');

/*
while문을 사용하여 0부터 10까지 정수 중에서 짝수만을 작은 수부터 출력하시오.
ex)
0
2
4
6
8
*/

console.log('[4번]');


//1번째 풀이)
var n = 0; // 변수 n을 선언하고 숫자 0을 할당한다.
while (n < 10) { //변수 n이 10미만인 동안, 아래 구문을 반복 수행한다.
  if (n % 2 == 0) { // n을 2로 나눈 나머지가 0일 때(짝수일 때),
    console.log(n); //n을 콘솔창에 출력한다.
  }
  n++; //n값을 1씩 증가시킨다.
}

//2번째 풀이)
var n = 0; // 변수 n을 선언하고 숫자 0을 할당한다.
while (n * 2 < 10) { //변수 n에 2를 곱한 수(2n = 짝수)가 10 미만인 동안, 아래 구문을 반복 수행한다.
  console.log(n); //n을 출력한다.
  n++; //n값을 1씩 증가시킨다.
}

console.log('\n');

/*
while문을 사용하여 0부터 10미만의 정수 중에서 홀수만을 큰수부터 출력하시오.
ex)
9
7
5
3
1
*/

console.log('[5번]');

var i = 5; //반복문을 5번 수행할 예정,

while (i > 0) {
  var n = 2 * i - 1; //n은 홀수만을 갖는다. 2의 배수에서 1을 뺀 값이 항상 홀수이다.
  console.log(n); //홀수 n을 출력한다. 
  i--;  //10미만의 정수 중 가장 큰 홀수인 9부터 내림차순으로 출력하기 위해 i값을 감소시킨다.
}

console.log('\n');

/*
삼각형출력하기

다음을 참고하여 *(별)로 높이가 5인(var line = 5) 삼각형을 문자열로 완성하라.
개행문자('\n')를 사용하여 개행한다. 완성된 문자열의 마지막은 개행문자('\n')로 끝나도 관게없다.

// 높이(line)가 5
*
**
***
****
*****

*/
console.log('[6번]')

// 1번째 풀이) for문 + if문
var star = ''; // 문자열 변수 star를 만들어준다. undefined가 출력되지 않게 하기 위해 한번 더 초기화한다.
for (var i = 0; i < 5; i++) { // 아래 명령을 5번 수행(line을 5개 만든다.)하는 반복문을 정의한다. 이때 i는 line(i+1번째 줄)을 세는 역할을 한다.
  if (star.length <= i) {
    star = star + '*'; // 문자열 변수 star에 *을 이어 붙인다. 문자형 변수 star는 라인이 내려갈수록 *이 하나씩 증가한다.
  }
  console.log(star);
}

console.log("\n")

// 2번째 풀이) for문
var star = ''; //문자열 변수 star
for (var i = 0; i < 5; i++) { //루프를 5번 돌면서,
  star = star + '*'; //*이 루프를 한번 돌 때마다 하나씩 추가되어 출력된다.
  console.log(star);
}

console.log('\n');

/*
트리 출력하기

다음을 참고하여 *(별)로 트리를 문자열로 완성하라.
개행문자('\n')를 사용하여 개행한다. 완성된 문자열의 마지막은 개행문자('\n')로 끝나도 관게없다.

// 높이(line)가 3일때 + 높이(line)가 5일때
*
**
***
*
**
***
****
*****

*/

console.log('[7번]');

//1번째 풀이)

//앞의 6번 문제와 동일하게 풀고, for문의 반복 횟수만 달리 하였습니다!
var star = '';
for(var i=0; i<3 ; i++){
  var star = star + '*';
  console.log(star);
}

var star = ''; // 한개부터 다시 출력하기 위해 초기화
for(var i=0; i<5 ; i++){
  var star = star + '*';
  console.log(star);
}

console.log('\n');

//2번째 풀이
var star = ''; 
for(var i=0; i<8 ; i++){ //loop 8번
  star = star + '*'; //star를 루프마다 이어 붙인다.
  if(i==3){ // 4번째 줄에서 star를 1개부터 다시 출력하도록 한다. 
    star = '*';
  }
  console.log(star);
}